name: pgrubic-action
description: "A GitHub Action to run pgrubic, a PostgreSQL linter and formatter for schema migrations and design best practices."
inputs:
  args:
    description: "Arguments passed to pgrubic. Use `pgrubic --help` to see available options. Defaults to `lint`."
    required: false
    default: "lint"
  src:
    description: "Source to run pgrubic on. Defaults to the current directory."
    required: false
    default: ${{ github.workspace }}
  pgrubic-version:
    description: "The version of pgrubic to use, e.g., `0.6.0` Defaults 'latest'."
    required: false
    default: "latest"
outputs:
  pgrubic-version:
    description: "The installed pgrubic version. Useful when using latest."
    value: ${{ steps.installed-pgrubic-version.outputs.installed-pgrubic-version }}

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pgrubic {{ inputs.pgrubic-version }}
      # id: install-pgrubic
      if: ${{ inputs.pgrubic-version == 'latest' }}
      run: pip install --upgrade pip pgrubic
      shell: bash
    - name: Install pgrubic {{ inputs.pgrubic-version }}
      # id: install-pgrubic
      if: ${{ inputs.pgrubic-version != 'latest' }}
      run: pip install --upgrade pip pgrubic==${{ inputs.pgrubic-version }}
      shell: bash
    - name: Echo installed pgrubic version
      id: installed-pgrubic-version
      run: echo "installed-pgrubic-version=$(pgrubic --version)" >> $GITHUB_OUTPUT
      shell: bash

  #   - run: echo Installed pgrubic ${{ inputs.pgrubic-version }}
  #     shell: bash
  #     env:
  #       RANDOM_NUMBER: ${{ steps.foo.outputs.random-number }}
  #   - name: Check installed pgrubicversion
  #     run: python --version
  #   Installed versions
  # Successfully set up CPython (3.12.11)

    # - name: Run if environment is not production
    #   if: ${{ inputs.environment != 'production' }}
    #   run: echo "Not production, skipping prod deploy"
    #   shell: bash

    # - name: Install pgrubic
    #   id: install-pgrubic
    #   run: pip install --upgrade pip pgrubic==${{ inputs.pgrubic-version }}
    #   shell: bash

    # - run: python -m pip install pre-commit
    #   shell: bash
    # - run: python -m pip freeze --local
    #   shell: bash
    # - uses: actions/cache@v4
    #   with:
    #     path: ~/.cache/pre-commit
    #     key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Run pgrubic
      run: pgrubic ${{ inputs.args }} ${{ inputs.src }}
      shell: bash
    # - run: pre-commit run --show-diff-on-failure --color=always ${{ inputs.extra_args }}
    #   shell: bash
